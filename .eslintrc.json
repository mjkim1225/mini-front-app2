{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "standard-with-typescript",
        "plugin:@typescript-eslint/recommended"
    ],
    "overrides": [
    ],
    "parser": "@typescript-eslint/parser", // for TS
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": "./tsconfig.json" // for TS
    },
    "plugins": [
        "react",
        "react-hooks",
        "@typescript-eslint" // for TS
    ],
    "rules": {
        "indent": ["warn", 4, { "SwitchCase": 1 }],
        "react/jsx-indent": ["warn", 4],
        "@typescript-eslint/indent": ["warn", 4], // for TS
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": "off", // for TS
        "@typescript-eslint/no-unused-vars": "off", //사용한하는 변수 표시 off
        // import Rreact from 'react', import ReactDOM from 'react-dom' 생략 체크
        "react/react-in-jsx-scope": "off",
        // 컴퍼넌트 선언 시 화살표 함수 선언 체크
        "react/function-component-definition": ["error", {"namedComponents": "arrow-function"}],
        // props validation
        "react/prop-types": "warn",
        // Class 컴포넌트 선언 시 생성자 체크
        "react/state-in-constructor": "off",
        // interactions 이 없는 태그에 이벤트 등록 체크
        "jsx-a11y/click-events-have-key-events": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        // 사용하지 않은 변수 체크
        "react/no-unused-state": "warn",
        // 훅의 의존성 변수 체크
        "react-hooks/exhaustive-deps": "warn",
        "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
        // return type off
        "@typescript-eslint/explicit-function-return-type": "off",
        // label for 체크
        "jsx-a11y/label-has-associated-control": "off",
        // for cesium
        "import/no-extraneous-dependencies": ["error", {"includeInternal": true, "includeTypes": true}],
        "react/jsx-filename-extension": ["warn", { "extensions": [".ts", ".tsx"] }] // for TS
    },
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [".ts", ".tsx"] // for TS
            }
        }
    }
}